---
// [slug].astro
import lib from 'zenn-markdown-html';
import 'zenn-content-css';
import MainLayout from '../../layouts/MainLayout.astro';
import matter from 'gray-matter';

import "../../styles/global.css";

export async function getStaticPaths() {
  // ÈùôÁöÑ„Å™„Éë„Çø„Éº„É≥„ÅÆ„Åø‰ΩøÁî®ÂèØËÉΩ - Áõ¥Êé•Èñ¢Êï∞ÂÜÖ„Åßimport.glob„ÇíÂëº„Å≥Âá∫„Åô
  let articleFiles = {};
  
  try {
    // ÊúÄÂàù„ÅÆ„Éë„Çπ„Éë„Çø„Éº„É≥„ÇíË©¶„Åô
    articleFiles = await import.meta.glob('../../content/articles/*.md', { 
      query: '?raw', 
      import: 'default' 
    });
    
    // Ë®ò‰∫ã„ÅåË¶ã„Å§„Åã„Çâ„Å™„Åë„Çå„Å∞‰ªñ„ÅÆ„Éë„Çπ„ÇíË©¶„Åô
    if (Object.keys(articleFiles).length === 0) {
      articleFiles = await import.meta.glob('../../../content/articles/*.md', { 
        query: '?raw', 
        import: 'default' 
      });
    }
    
    // „Åù„Çå„Åß„ÇÇË¶ã„Å§„Åã„Çâ„Å™„Åë„Çå„Å∞„Åï„Çâ„Å´Ê∑±„ÅÑ„Éë„Çπ„ÇÇË©¶„Åô
    if (Object.keys(articleFiles).length === 0) {
      articleFiles = await import.meta.glob('../../../../content/articles/*.md', { 
        query: '?raw', 
        import: 'default' 
      });
    }
  } catch (error) {
    console.error("Ë®ò‰∫ã„Éï„Ç°„Ç§„É´„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü:", error);
    articleFiles = {};
  }
  
  // ÂêÑË®ò‰∫ã„ÅÆ„Éë„Çπ„Å®ÂÜÖÂÆπ„ÇíÂá¶ÁêÜ
  const articles = await Promise.all(
    Object.entries(articleFiles).map(async ([path, resolver]) => {
      const rawContent = await resolver();
      const { data, content } = matter(rawContent);
      const slug = path.split('/').pop().replace('.md', '');
      
      return {
        slug,
        frontmatter: data,
        content
      };
    })
  );
  
  // ÈùôÁöÑ„Éë„Çπ„ÇíËøî„Åô
  return articles.map(article => {
    return {
      params: { slug: article.slug },
      props: {
        title: article.frontmatter.title,
        emoji: article.frontmatter.emoji,
        type: article.frontmatter.type,
        topics: article.frontmatter.topics,
        date: article.frontmatter.date,
        body: article.content
      }
    };
  });
}

const { title, emoji, type, topics, date, body } = Astro.props;
const markdownToHtml = typeof lib === 'function' ? lib : lib.default;
const html = markdownToHtml(body, {
  embedOrigin: "https://embed.zenn.studio"
});
---

<MainLayout title={`${title} | Rioto3's Portfolio`} description={title}>
  <article class="article-container px-18 py-5">
    <!-- Ë®ò‰∫ã„Éò„ÉÉ„ÉÄ„ÉºÈÉ®ÂàÜ -->
    <div class="article-header p-8 mb-8 border-b border-[#F7F6F2]">
      <div class="emoji-container mb-4">
        <span class="text-5xl block">{emoji || "üìù"}</span>
      </div>
      
      <h1 class="text-3xl font-bold mb-6">{title}</h1>
      
      <div class="meta-container flex flex-wrap items-center gap-4 mb-6">
        <div class="date-container text-gray-500">
          <time datetime={date}>
            {new Date(date || new Date()).toLocaleDateString('ja-JP', {year: 'numeric', month: 'long', day: 'numeric'})}„Å´ÂÖ¨Èñã
          </time>
        </div>
        
        <div class="type-container">
          <span class="bg-gray-100 text-gray-800 rounded-full px-4 py-1 text-sm font-medium">
            {type}
          </span>
        </div>
      </div>
      
      <div class="topics-container">
        <div class="flex flex-wrap gap-2">
          {topics && topics.map((topic: string) => (
            <span class="bg-blue-50 text-blue-700 rounded-full px-3 py-1 text-sm font-medium">
              {topic}
            </span>
          ))}
        </div>
      </div>
    </div>
    
    <!-- Ë®ò‰∫ã„Ç≥„É≥„ÉÜ„É≥„ÉÑÈÉ®ÂàÜ -->
    <div class="article-content bg-white rounded-lg p-8 border border-[#F7F6F2]">
      <div class="znc prose prose-lg max-w-none">
        <Fragment set:html={html} />
      </div>
    </div>
    
    <!-- Ë®ò‰∫ã„Éï„ÉÉ„Çø„ÉºÈÉ®ÂàÜ -->
    <div class="article-footer mt-8 text-center">
      <a 
        href="/articles" 
        class="inline-flex items-center text-blue-600 hover:text-blue-800"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd" />
        </svg>
        Ë®ò‰∫ã‰∏ÄË¶ß„Å´Êàª„Çã
      </a>
    </div>
  </article>
</MainLayout>

<script is:inline src="https://embed.zenn.studio/js/listen-embed-event.js"></script>

<style>
  .znc {
    font-size: 1rem;
    line-height: 1.8;
  }
  
  @media (max-width: 640px) {
    .article-header,
    .article-content {
      padding: 1.5rem;
    }
  }
</style>
