---
import MainLayout from '../layouts/MainLayout.astro';
import lib from 'zenn-markdown-html';
import 'zenn-content-css';
import matter from 'gray-matter';

import "../styles/global.css";

// サブモジュールなどからコンテンツを取得する関数
async function getArticles() {
  try {
    // 静的なパスを使用（変数による連結は使えない）
    const articlesInContent = await import.meta.glob('../content/articles/*.md', { 
      query: '?raw', 
      import: 'default' 
    });
    
    if (Object.keys(articlesInContent).length > 0) {
      return articlesInContent;
    }
    
    // 代替パスを試す（別の静的パターン）
    const articlesInParentContent = await import.meta.glob('../../content/articles/*.md', { 
      query: '?raw', 
      import: 'default' 
    });
    
    if (Object.keys(articlesInParentContent).length > 0) {
      return articlesInParentContent;
    }
    
    // さらに深いパスも試す
    return await import.meta.glob('../../../content/articles/*.md', { 
      query: '?raw', 
      import: 'default' 
    });
  } catch (error) {
    console.error("記事の取得に失敗しました:", error);
    return {};
  }
}

const articles = await getArticles();
const articleEntries = await Promise.all(
  Object.entries(articles).map(async ([path, resolver]) => {
    const content = await resolver();
    const { data: frontmatter, content: rawContent } = matter(content);
    
    return {
      frontmatter,
      path
    };
  })
);

// 公開済みの記事のみフィルタリング
const publishedArticles = articleEntries
  .filter(article => article.frontmatter.published !== false)
  .sort((a, b) => 
    new Date(b.frontmatter.date || 0) - new Date(a.frontmatter.date || 0)
  )
  .slice(0, 5); // 最新の5記事を表示
---

<MainLayout>
  <section class="hero mb-12">
    <h1 class="text-4xl font-bold mb-4">Rioto3</h1>
    <p class="text-lg text-gray-600">
      テクノロジーと innovation の最前線から生まれる洞察
    </p>
  </section>

  <section class="recent-articles mb-16">
    <h2 class="text-2xl font-semibold mb-6">最近の記事</h2>
    <div class="space-y-4">
      {publishedArticles.map(article => (
        <article class="bg-white p-5 rounded-lg border border-[#F7F6F2] hover:shadow-md transition-shadow">
          <a href={`/articles/${article.path.split('/').pop().replace('.md', '')}`} class="block">
            <div class="flex items-center gap-4">
              <span class="text-3xl flex-shrink-0">{article.frontmatter.emoji || "📝"}</span>
              <div>
                <h3 class="text-lg font-medium">{article.frontmatter.title}</h3>
                <div class="flex flex-wrap gap-2 mt-2">
                  {article.frontmatter.topics?.map((topic: string) => (
                    <span class="inline-block bg-blue-50 text-blue-700 text-xs px-2 py-1 rounded-full">{topic}</span>
                  ))}
                </div>
                <time datetime={article.frontmatter.date} class="text-sm text-gray-500 mt-2 block">
                  {new Date(article.frontmatter.date || new Date()).toLocaleDateString('ja-JP')}
                </time>
              </div>
            </div>
          </a>
        </article>
      ))}
    </div>
    <div class="mt-6">
      <a href="/articles" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700">
        すべての記事を見る
      </a>
    </div>
  </section>
</MainLayout>
